-- NETFLIX PROJECTS 
CREATE TABLE NETFLIXMOVIE
(
	SHOW_ID VARCHAR(6),
	TYPE 	VARCHAR(10),
	TITLE	VARCHAR(150),
	DIRECTOR	VARCHAR(208),
	CASTS		VARCHAR(1000),
	COUNTRY VARCHAR(150),
	DATE_ADDED VARCHAR(50),
	RELEASE_YEAR INT,
	RATING	VARCHAR(10),
	DURATION	VARCHAR(15),
	LISTED_IN	VARCHAR(105),
	DESCRIPTION VARCHAR(250)
)

SELECT * FROM NETFLIXMOVIE

SELECT COUNT(*) AS TOTAL_CONTENT
FROM NETFLIXMOVIE;

SELECT DISTINCT TYPE FROM NETFLIXMOVIE



--1. COUNT THE NUMBER OF MOVIES VS TV SHOWS

SELECT TYPE,COUNT(*) AS TOTAL_CONTENT
	FROM NETFLIXMOVIE
	GROUP BY TYPE
	
	
-- 2. FIND THE MOST COMMON RATING FOR MOVIES AND TV SHOWS

SELECT TYPE,
	RATING
	FROM
(
SELECT 
	TYPE, 
	RATING, 
	COUNT(*),
	RANK() OVER(PARTITION BY TYPE ORDER BY COUNT(*) DESC) AS RANKING
FROM NETFLIXMOVIE
	GROUP BY 1, 2
) AS T1
WHERE 
	RANKING = 1
	
-- 3. LIST ALL MOVIES RELEASED IN A SPECIFIC YEAR (E.G., 2020)
-- FILTER 2020 
-- MOVIES
	
SELECT * FROM NETFLIXMOVIE
WHERE TYPE = 'MOVIE'
	AND
	RELEASE_YEAR = 2020
	

-- 	4. FIND THE TOP 5 COUNTRIES WITH THE MOST CONTENT ON NETFLIX


SELECT 
	COUNTRY, 
	COUNT(SHOW_ID) AS TOTAL CONTENT
FROM NETFLIXMOVIE

SELECT 
	UNNEST (STRING_TO_ARRAY(COUNTRY, ',')) AS NEW_COUNTRY,
	COUNT(SHOW_ID) AS TOTAL_CONTENT
	FROM NETFLIXMOVIE
GROUP BY 1
ORDER BY 2 DESC
LIMIT 5;
-- 5. IDENTIFY THE LONGEST MOVIE

SELECT * FROM NETFLIXMOVIE
WHERE
	TYPE = 'MOVIE'
	AND 
	DURATION = (SELECT MAX(DURATION) FROM NETFLIXMOVIE)
	
	
-- 6. FIND CONTENT ADDED IN THE LAST 5 YEARS

SELECT * FROM NETFLIXMOVIE
	WHERE 
	TO_DATE(DATE_ADDED, 'MONTH DD, YYYY') >= CURRENT_DATE - INTERVAL '5 YEARS'

--REFERENCE
SELECT CURRENT_DATE - INTERVAL '5 YEARS'
	
	
-- 7. FIND ALL THE MOVIES/TV SHOWS BY DIRECTOR 'RAJIV CHILAKA'!

SELECT * FROM NETFLIXMOVIE 
	WHERE DIRECTOR = '%RAJIV CHILAKA%'

	
--	8. LIST ALL TV SHOWS WITH MORE THAN 5 SEASONS

SELECT 
	*
FROM NETFLIXMOVIE 
WHERE 
	TYPE = 'TV SHOW' 
	AND
	SPLIT_PART(DURATION, ' ', 1):: NUMERIC > 5
	
-- SELECT SPLIT_PART('APPLE BANANA CHEERY', ' ', 1)
	
-- 9. COUNT THE NUMBER OF CONTENT ITEMS IN EACH GENRE

SELECT 
	UNNEST(STRING_TO_ARRAY(LISTED_IN, ',')) AS GENRE,
	COUNT (SHOW_ID) AS TOTAL_CONTENT
FROM NETFLIXMOVIE 	
GROUP BY 1
	
--	10.FIND EACH YEAR AND THE AVERAGE NUMBERS OF CONTENT RELEASE IN INDIA ON NETFLIX. 
--RETURN TOP 5 YEAR WITH HIGHEST AVG CONTENT RELEASE!
	
SELECT 
	EXTRACT(YEAR FROM TO_DATE(DATE_ADDED, 'MONTH DD, YYYY')) AS YEAR,
	COUNT(*),
	ROUND(
	COUNT(*)/(SELECT COUNT(*) FROM NETFLIXMOVIE WHERE COUNTRY = 'INDIA'):: NUMERIC * 100
	,2) AS AVG_CONTENT_PER_YEAR
FROM NETFLIXMOVIE
WHERE COUNTRY = 'INDIA'
GROUP BY 1

	
	
-- 11. LIST ALL MOVIES THAT ARE DOCUMENTARIES

SELECT * FROM NETFLIXMOVIE 
WHERE LISTED_IN ILIKE '%DOCUMENTARIES%'
	
	
	
-- 12. FIND ALL CONTENT WITHOUT A DIRECTOR

SELECT * FROM NETFLIXMOVIE WHERE DIRECTOR ISNULL
	

	
-- 13. FIND HOW MANY MOVIES ACTOR 'SALMAN KHAN' APPEARED IN LAST 10 YEARS!

SELECT * FROM NETFLIXMOVIE WHERE CASTS ILIKE '%SALMAN KHAN%'	
	AND RELEASE_YEAR > EXTRACT(YEAR FROM CURRENT_DATE) - 10
	
-- 14. FIND THE TOP 10 ACTORS WHO HAVE APPEARED IN THE HIGHEST NUMBER OF MOVIES PRODUCED IN INDIA.

SELECT  
UNNEST(STRING_TO_ARRAY(CASTS,',')) AS ACTORS,
COUNT(*) AS TOTAL_CONTENT
FROM NETFLIXMOVIE
WHERE COUNTRY ILIKE '%INDIA'
GROUP BY 1
ORDER BY 2 DESC
LIMIT 10
	

	
	
-- 15.CATEGORIZE THE CONTENT BASED ON THE PRESENCE OF THE KEYWORDS 'KILL' AND 'VIOLENCE' IN 
--THE DESCRIPTION FIELD. LABEL CONTENT CONTAINING THESE KEYWORDS AS 'BAD' AND ALL OTHER 
--CONTENT AS 'GOOD'. COUNT HOW MANY ITEMS FALL INTO EACH CATEGORY.



WITH NEW_TABLE
AS
(
SELECT 
*, 
	CASE 
	WHEN 
		DESCRIPTION ILIKE '%KILLS%' OR 
		DESCRIPTION ILIKE '%VOILENCE%' THEN 'BAD_FILM'
		ELSE 'GOOD CONTENT'
	END CATEGORY
FROM NETFLIXMOVIE
)
SELECT CATEGORY,
COUNT(*) AS TOTAL_CONTENT
FROM NEW_TABLE
GROUP BY 1 



-- 16. Find the top 3 directors with the most content on Netflix.
SELECT DIRECTOR, COUNT(SHOW_ID) AS TOTAL_CONTENT
FROM NETFLIXMOVIE
WHERE DIRECTOR IS NOT NULL
GROUP BY DIRECTOR
ORDER BY TOTAL_CONTENT DESC
LIMIT 3;

-- 17. Find the top 3 most common words in the titles of Netflix content.
WITH WORDS AS (
    SELECT UNNEST(STRING_TO_ARRAY(TITLE, ' ')) AS WORD
    FROM NETFLIXMOVIE
)
SELECT WORD, COUNT(*) AS OCCURRENCES
FROM WORDS
GROUP BY WORD
ORDER BY OCCURRENCES DESC
LIMIT 3;

--18.Identify genres that experienced a decline in the number of releases year over year, starting from their peak.
This query tracks genre trends over time to see when their release counts began to decline.

WITH GENRE_YEAR AS (
    SELECT 
        UNNEST(STRING_TO_ARRAY(LISTED_IN, ',')) AS GENRE,
        EXTRACT(YEAR FROM TO_DATE(DATE_ADDED, 'MONTH DD, YYYY')) AS YEAR,
        COUNT(SHOW_ID) AS CONTENT_COUNT
    FROM NETFLIXMOVIE
    WHERE LISTED_IN IS NOT NULL
    GROUP BY GENRE, YEAR
)
SELECT GENRE, YEAR, CONTENT_COUNT
FROM GENRE_YEAR GY1
WHERE CONTENT_COUNT < (
    SELECT MAX(CONTENT_COUNT)
    FROM GENRE_YEAR GY2
    WHERE GY2.GENRE = GY1.GENRE
)
ORDER BY GENRE, YEAR DESC;

--19. Analyze the trend of Netflix releasing original content (i.e., content produced by Netflix) over time.
---This query tracks how Netflix's original content output has evolved by year.


SELECT 
    RELEASE_YEAR,
    COUNT(*) AS ORIGINAL_CONTENT_COUNT
FROM NETFLIXMOVIE
WHERE TITLE ILIKE '%NETFLIX%' 
GROUP BY RELEASE_YEAR
ORDER BY RELEASE_YEAR DESC;


-- 20 Calculate the average release year for each genre and sort genres by the earliest average release year.
--This query calculates the average release year for each genre to see which genres are older or newer.

WITH GENRE_YEAR_AVG AS (
    SELECT 
        UNNEST(STRING_TO_ARRAY(LISTED_IN, ',')) AS GENRE,
        AVG(RELEASE_YEAR) AS AVG_RELEASE_YEAR
    FROM NETFLIXMOVIE
    WHERE RELEASE_YEAR IS NOT NULL AND LISTED_IN IS NOT NULL
    GROUP BY GENRE
)
SELECT GENRE, ROUND(AVG_RELEASE_YEAR, 2) AS AVG_YEAR
FROM GENRE_YEAR_AVG
ORDER BY AVG_YEAR ASC;




